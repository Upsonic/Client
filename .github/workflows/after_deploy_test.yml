name: After Deploy Test Every 15 Minute

on:
  schedule:
    - cron:  '*/15 * * * *'      
  workflow_dispatch: 

  workflow_run:
    workflows: ["Deploys"]
    types:
      - completed  

jobs:


  tagext:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.8'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Getting Tag
        id: tag_extractor
        run: echo "latest_tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"

      - name: Getting Tag 2
        id: tag_extractor_2
        run: |
          TAG=${{ steps.tag_extractor.outputs.latest_tag }}   
          echo "latest_tag_2=${TAG:1} " >> "$GITHUB_OUTPUT"


    outputs:
      tag: ${{ steps.tag_extractor.outputs.latest_tag }}              
      tag_2: ${{ steps.tag_extractor_2.outputs.latest_tag_2 }}      


    
  requested:
    needs: tagext
    runs-on: ubuntu-latest
    steps:
      - name: Discord Webhook Action
        if: ${{  github.event_name == 'workflow_run' }}
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.AFTER_DEPLOY_TEST_WEBHOOK_URL }}
          content: "Requested <@&1163402741394178162> ${{ needs.tagext.outputs.tag }}"            

  pypi:
    needs: [tagext, requested]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.8'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.tagext.outputs.tag }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8


      - name: Install pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Install dependencies
        run: |   
          pip install upsonic==${{ needs.tagext.outputs.tag_2 }} --no-cache --upgrade


      - name: Test with pytest
        run: |
          cd tests
          pytest standards -v





  failure:
    runs-on: ubuntu-latest
    needs: [pypi]
    if: ${{ always() && (needs.pypi.result == 'failure') }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Getting Tag
        id: tag_extractor
        run: echo "latest_tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"         
      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.AFTER_DEPLOY_TEST_WEBHOOK_URL }}
          content: "failure <@&1163402741394178162> ${{ steps.tag_extractor.outputs.latest_tag }}"  


  success:
    runs-on: ubuntu-latest
    needs: [pypi]
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' && (needs.pypi.result == 'success') }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Getting Tag
        id: tag_extractor
        run: echo "latest_tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"         
      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.AFTER_DEPLOY_TEST_WEBHOOK_URL }}
          content: "success ${{ steps.tag_extractor.outputs.latest_tag }}"  



  success_important:
    runs-on: ubuntu-latest
    needs: [pypi]
    if: ${{ github.event_name == 'workflow_run' && (needs.pypi.result == 'success') }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Getting Tag
        id: tag_extractor
        run: echo "latest_tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"         
      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.AFTER_DEPLOY_TEST_WEBHOOK_URL }}
          content: "success <@&1163402741394178162> ${{ steps.tag_extractor.outputs.latest_tag }}"            